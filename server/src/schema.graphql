type Query {
  getUser(id: ID!): User
}

type Mutation {
  updateUser(user: UpdateUserRequest!): UpdateUserResponse
}

input UpdateUserRequest {
  id: ID!
  displayName: String!
}

type UpdateUserResponse {
  id: ID!
  displayName: String!
}

type User {
  id: ID!
  createdAt: String!
  updatedAt: String!
  displayName: String!
  createdCocktails: [Cocktail]
  createdIngredients: [Ingredient]
  createdProducts: [Product]
  shoppingItems: [ShoppingItem]
  tabCocktails: [TabCocktail]
  cocktails: [UserCocktail]
  history: [UserHistory]
  ingredients: [UserIngredient]
  products: [UserProduct]
}

type Cocktail {
  id: Int!
  name: String!
  instructions: String
  notes: String
  createdById: ID!
  createdAt: String!
  updatedAt: String!
  createdBy: User!
  ingredients: [CocktailIngredient]
  tabCocktail: [TabCocktail]
  userCocktails: [UserCocktail]
  userHistory: [UserHistory]
}

type CocktailIngredient {
  id: Int!
  amount: Float!
  units: String
  cocktailId: Int!
  ingredientId: Int!
  productId: Int
  order: Int
  cocktail: Cocktail!
  ingredient: Ingredient!
  product: Product
}

type Ingredient {
  id: Int!
  name: String!
  createdById: ID!
  createdAt: String!
  updatedAt: String!
  ingredientTypeId: Int
  cocktailIngredients: [CocktailIngredient]
  createdBy: User!
  type: IngredientType
  products: [Product]
  shoppingItems: [ShoppingItem]
  userIngredients: [UserIngredient]
}

type IngredientType {
  id: Int!
  name: String!
  isLiquid: Boolean!
  ingredients: [Ingredient]
}

type Product {
  id: Int!
  name: String!
  ingredientId: Int!
  createdById: ID!
  createdAt: String!
  updatedAt: String!
  cocktailIngredients: [CocktailIngredient]
  createdBy: User!
  ingredient: Ingredient!
  shoppingItems: [ShoppingItem]
  userProducts: [UserProduct]
}

type UserCocktail {
  id: Int!
  userId: ID!
  cocktailId: Int!
  dateAdded: Int!
  cocktail: Cocktail!
  user: User!
}

type UserIngredient {
  id: Int!
  userId: ID!
  ingredientId: Int!
  dateAdded: String!
  ingredient: Ingredient!
  user: User!
}

type UserProduct {
  id: Int!
  userId: ID!
  productId: Int!
  dateAdded: String!
  product: Product!
  user: User!
}

type UserHistory {
  id: Int!
  drinkDate: String!
  userId: ID!
  cocktailId: Int!
  cocktail: Cocktail!
  user: User!
}

type ShoppingItem {
  id: Int!
  quantity: Int!
  ingredientId: Int
  productId: Int
  userId: ID!
  dateAdded: String!
  ingredient: Ingredient
  product: Product
  user: User!
}

type TabCocktail {
  id: Int!
  cocktailId: Int!
  userId: ID!
  cocktail: Cocktail
  user: User
}
